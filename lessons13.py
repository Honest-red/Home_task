# чаще всего работаем с байтами.
# файл  - набор байтов записанном в определенном формате.
# файл содежржит заголовок(может и не быть, не обязательный) с служебной информацией, к примеру "как открыть этот файл"
# признак конца файла.
#
# имя файла состояит из имени, расширения, путь.
# расширение необходимо для ОС, что бы знакть какой программой открыть файл.
#
# формируя путь необходимо правильно указать сепаратор - разделитель.
# Есть в каждой папке
# . - эта директория в которой находимся
# .. - директория на уровень выше. ()
#
# В винде имена файлов не регистрозависимые
# Для Линуксов есть зависимость.
#
# обозначение конца строки
# для ОС Винда \r\n
# для Линункса \n
# для АйОС \r
#
# _____________
# открыть файл - функция

open(file_name, mode, encode)
# file_name- имя файла(обязательный
# mode(в каком режиме открыть, чтение или запись .Открывается на чтение текствый файл 'w' - открытии файла в режиме записи
# Если данные есть то затруться, если файла такого нет, то просто создаться сам файл
# encode: - в каком формате открыть(не обязательынй)

#file.close() - имя файла.close()  - закрытие файла

'''
режимы открытия 
r - read - режим чтения - дефолтный режим 
w - write - режим записи - если файл сущетсвует, перезатрется.  Если нет файла, то будет создан и открыт на запись
x - exclusive - эксклюзивный режим - если файл сущетсвует, поулчим ошибку что существует. Если нет, то будет создан и открыт на запись
a - append - дозапсь - открытие файла на дозапись. 

как открывается файл
t - text  - режим по умолчанию
b - binary - бинарный режим

+ - открытие файла в миксовым режиме. В смешанном режиме.  Пример 'rt+' - чтение и запись текстового файла.

в файле тоже присствует свой внутренний курсор, который смещает нащу позицию относительно того что мы внесли.
Что бы сразуже эту инфрмацию прочитать, необходимо переместить курсор в начало своей информации.



 
'''

